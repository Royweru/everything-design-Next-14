// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Billboard{
  id String @id @default(uuid())
  label String 
  imageUrl String

  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Category{
  id String @id @default(uuid())
  name String 

  billboardId String
  billboard Billboard @relation(fields: [billboardId],references: [id], onDelete: Cascade)

  products Product[]
}
model Size{
  id String @id @default(uuid())
  name String 
  value String

  products Product[]
}

model Product{
  id String @id @default(uuid())
  label String
  thumbnail String
  description String
  isFeatured Boolean? @default(false)
  topSelling Boolean? @default(false)
  images Image[]
  price Float
  
  categoryId String
  category Category @relation(fields: [categoryId],references: [id],onDelete: Cascade)

  sizeId String
  size Size @relation(fields: [sizeId],references: [id],onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Image {
    id String @id @default(uuid())
    productId String
    product Product @relation(fields: [productId],references: [id],onDelete: Cascade)
    
    url String
}
